##
## table column definitions
##
#macro(printCols $cols_map)
  #foreach( $key in $cols_map.keySet()) 
${key}   ${cols_map.get($key)}#if($foreach.hasNext),
#end
  #end
#end

##
## merge the keys from internal to external table
##
#macro(mergeKeys $cols_key)
#foreach( $col in $cols_key.keySet()) 
#if(${cols_isKey.get($col)})coalesce(a.${col},b.${col}) as ${col},#end
#end

#end

##
## join columns
##
#macro(joinKeys $cols_map)
#foreach($key in $cols_map)a.${key}=b.${key}#if($foreach.hasNext) and #end#end
#end

##
## columns list
##
#macro(listCols $cols_map $delimeter)
#foreach( $key in $cols_map) ${key}#if($foreach.hasNext)${delimeter}#end#end
#end

##
## The macros below helps extract subset of the columns - all, keys or nonkeys
## Then call another marco with the subset. e.g. #@colsList( "#listCols($cols_keys ',')" )#end

##
## All Columns
##
#macro(colsList $func )
#set($cols_keys = [])
#foreach( $key in $cols_isKey.keySet())${cols_keys.add($cols_keys.size(),$key)}#end$func#end

##
## All Key Columns
##
#macro(keyColsList $func )
#set($cols_keys = [])
#foreach( $key in $cols_isKey.keySet())#if(${cols_isKey.get($key)})${cols_keys.add($cols_keys.size(),$key)}#end#end$func#end

##
## All Non Key Columns
##
#macro(NonKeyColsList $func )
#set($cols_keys = [])
#foreach( $key in $cols_isKey.keySet())#if(!${cols_isKey.get($key)})${cols_keys.add($cols_keys.size(),$key)}#end#end$func#end
